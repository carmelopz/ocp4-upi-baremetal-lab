apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: etcd-backup
  labels:
    app: etcd
    component: backup
spec:
  schedule: "30 3 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 2
      template:
        spec:
          serviceAccountName: etcd-backup
          restartPolicy: Never
          dnsPolicy: ClusterFirst
          containers:
            - name: etcd-backup
              image: registry.redhat.io/openshift4/ose-deployer:latest
              imagePullPolicy: Always
              env:
                - name: HOST_PATH
                  value: /host
                - name: ETCD_BACKUP_SCRIPT
                  value: /usr/local/bin/cluster-backup.sh
                - name: ETCD_BACKUP_MASTER_PATH
                  value: /home/core/assets/backup
                - name: ETCD_BACKUP_PV_PATH
                  value: /var/lib/etcd-backup
              command: [ "/bin/bash", "-c" ]
              args:
                - >-
                  `# Make etcd backup`
                  chroot ${HOST_PATH} ${ETCD_BACKUP_SCRIPT} ${ETCD_BACKUP_MASTER_PATH} &&

                  `# Copy backup files (etcd and static pods) to PV folder`
                  rsync -rtv ${HOST_PATH}/${ETCD_BACKUP_MASTER_PATH}/* ${ETCD_BACKUP_PV_PATH}/ &&

                  `# Prune backup files`
                  rm -f ${HOST_PATH}/${ETCD_BACKUP_MASTER_PATH}/*.db ${HOST_PATH}/${ETCD_BACKUP_MASTER_PATH}/*.tar.gz
              securityContext:
                runAsUser: 0
                privileged: true
              volumeMounts:
                - name: volume-host
                  mountPath: /host
                - name: volume-backup
                  mountPath: /var/lib/etcd-backup
              resources:
                requests:
                  memory: "64Mi"
                  cpu: "500m"
                limits:
                  memory: "64Mi"
                  cpu: "500m"
          volumes:
            - name: volume-host
              hostPath:
                path: /
                type: Directory
            - name: volume-backup
              persistentVolumeClaim:
                claimName: etcd-backup-files
          nodeSelector:
            node-role.kubernetes.io/master: ""
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/master
